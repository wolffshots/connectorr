services:
  ## minimal example with an alpine image
  # alpine:
  #   image: alpine:latest
  #   network_mode: service:connectorr
  #   command: sh -c "sleep 3600 &; wait $!" # just sleep for an hour

  connectorr:
    #build: . # use this to build from the Dockerfile and comment out image
    image: ghcr.io/wolffshots/connectorr:latest
    ## specific port for the app/s you have connected
    #ports:
    #  - 8080:8080
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY_IP=172.21.0.2
      - BYPASS_IP=172.21.0.1 # ip of the docker host in the network, normally 172.x.0.1
      - BYPASS_SUBNETS=192.168.88.0/24,100.64.0.0/10 # comma separated list of subnets that should go through bypass ip
      - HEALTH_REMOTE_IP=1.1.1.1
      - HEALTH_REMOTE_CHECK=on
      - HEALTH_LOCAL_IP=192.168.88.1
      - HEALTH_LOCAL_CHECK=on
      # - IP_API_URL=ifconfig.me/ip
      # - IP_API_CHECK=on
      # - TRACE_ON_START=off
    restart: unless-stopped
    ## these extra hosts just give names to IPs in things like traceroute but are optional
    extra_hosts:
      - "gateway:172.21.0.2"
      - "bypass:172.21.0.1"
      - "health_local_ip:192.168.88.1"
      - "health_remote_ip:1.1.1.1"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    networks:
      vpn_net: # the network you want to use for the gateway + apps 
        ipv4_address: 172.21.0.50 # static ip for this container
networks:
  vpn_net: # the network you want to use for the gateway + apps 
    external: true # make sure to create it statically outside of this stack with something like `docker network create --subnet 172.21.0.0/24 vpn_net`

